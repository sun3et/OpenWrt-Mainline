
name: Srcode Checker

on:
  workflow_dispatch:
  schedule:
    - cron: 30 1,13 * * *

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Read repo.json
        id: repojson
        run: |
          echo "REPO_URL=$(jq -r '.repo_url' repo.json)" >> $GITHUB_ENV
          echo "REPO_BRANCH=$(jq -r '.repo_branch' repo.json)" >> $GITHUB_ENV

      - name: Get Commit Hash
        id: getHash
        run: |
          git clone --depth 1 ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt
          echo "commitHash=$(git -C openwrt rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Compare Commit Hash
        id: cacheHash
        uses: actions/cache@main
        with:
          path: .commitHash
          key: HEAD-${{ steps.getHash.outputs.commitHash }}

      - name: Save New Commit Hash
        if: steps.cacheHash.outputs.cache-hit != 'true'
        run: |
          echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash

      - name: Check OpenWrt Builder Status
        id: check_builder_status
        run: |
          WORKFLOW_NAME="OpenWrt Builder"
          OWNER="${{ github.repository_owner }}"
          REPO="${{ github.event.repository.name }}"

          WORKFLOW_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/$OWNER/$REPO/actions/workflows" | jq -r --arg NAME "$WORKFLOW_NAME" '.workflows[] | select(.name == $NAME) | .id')

          if [ -z "$WORKFLOW_ID" ]; then
            echo "Workflow not found"
            exit 1
          fi

          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/$OWNER/$REPO/actions/workflows/$WORKFLOW_ID/runs?status=success&per_page=1")

          STATUS=$(echo "$RESPONSE" | jq -r '.workflow_runs[0].conclusion')
          LAST_RUN_TIME=$(echo "$RESPONSE" | jq -r '.workflow_runs[0].updated_at')
          if [ "$LAST_RUN_TIME" == "null" ]; then
            TIME_DIFF=0
            echo "::notice file=README.md::üïòLast run time: $LAST_RUN_TIME"
          else
            TIME_DIFF=$(( ($(date +%s) - $(date -d "$LAST_RUN_TIME" +%s)) / 86400 ))
            echo "::notice file=README.md::üïòLast run time: $(TZ="Asia/Shanghai" date -d "$LAST_RUN_TIME" '+%Y-%m-%d %H:%M:%S')"
          fi

          if [ "$TIME_DIFF" -gt 30 ]; then
            STATUS=stale
          fi

          echo "BUILDER_STATUS=$STATUS" >> $GITHUB_ENV
          echo "::notice file=README.md::üïíTime since last run: $TIME_DIFF days"
          echo "::notice file=README.md::üñ•Ô∏èStatus of the last run: $STATUS"

      - name: Trigger Build
        if: env.BUILDER_STATUS != 'success' || steps.cacheHash.outputs.cache-hit != 'true'
        uses: peter-evans/repository-dispatch@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: Source Code Updater

      - name: Notify Build Trigger
        run: |
          if [[ ${{ env.BUILDER_STATUS }} != 'success' || ${{ steps.cacheHash.outputs.cache-hit }} != 'true' ]]; then
            echo "::notice file=README.md::üì¶Trigger build: true"
          else
            echo "::notice file=README.md::üì¶Trigger build: false"
          fi

      - name: Delete Expired Workflows
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 0
          delete_workflow_pattern: srcode-checker.yml

      - name: Delete Zero runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 0
          delete_workflow_pattern: zero-runs.yml
